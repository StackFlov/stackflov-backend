server:
  port: 8080

spring:
  config:
    import: optional:file:.env[.properties]
  profiles:
    active: dev
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 100
  data:
    redis:
      host: localhost
      port: 6379
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - profile
              - email

          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope:
              - profile_nickname
            # - account_email
            client-name: Kakao
            provider: kakao

          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            scope:
              - name
              - email
              - nickname
              - profile_image
            client-name: Naver
            provider: naver

        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

jwt:
  secret: ${JWT_SECRET}

#cloud:
#  aws:
#    s3:
#      bucket: ${AWS_S3_BUCKET}
#    credentials:
#      access-key: ${AWS_ACCESS_KEY}
#      secret-key: ${AWS_SECRET_KEY}
#    region:
#      static: ap-northeast-2
#      auto: false
#    stack:
#      auto: false

springdoc:
  api-docs:
    path: /v3/api-docs
#  swagger-ui:
#    path: /swagger-ui.html
  default-consumes-media-type: application/json;charset=UTF-8
  default-produces-media-type: application/json;charset=UTF-8

logging:
  level:
    root: INFO
    com.stackflov: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql: TRACE

---
# 'dev' 프로필이 활성화됐을 때만 적용될 설정을 정의합니다.
spring:
  config:
    activate:
      on-profile: dev
app:
  oauth:
    redirect-uri: http://localhost:3000/oauth-redirect

---
# 'prod' 프로필이 활성화됐을 때만 적용될 설정을 정의합니다.
spring:
  config:
    activate:
      on-profile: prod
springdoc:
  swagger-ui:
    enabled: false
app:
  oauth:
    redirect-uri: https://[내 도메인 주소]/oauth-redirect