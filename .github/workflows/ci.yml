name: CI/CD

on:
  push:
    branches:
      - "**"
  workflow_dispatch:

jobs:
  build-and-push-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Gradle
        run: |
          chmod +x gradlew
          ./gradlew build

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 도커 태그 자동 생성: 모든 브랜치에서는 sha 태그, master면 latest도 추가
      - name: Docker meta (tags & labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/stackflov
          tags: |
            type=raw,value=sha-${{ github.sha }}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/master' }}
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-to-ec2:
    needs: build-and-push-docker-image
    runs-on: ubuntu-latest
    # master 브랜치에서만 배포
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # (비공개 레포면 필수) Docker Hub 로그인
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin || true

            export DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
            export REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}
            cd /home/ubuntu/app

            # master에서 latest 태그로 굴리는 전략이면 latest만 pull
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/stackflov:latest
            docker pull redis:alpine

            bash deploy.sh
